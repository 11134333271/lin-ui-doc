(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{379:function(t,s,a){"use strict";a.r(s);var n=a(26),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"lin-脚手架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lin-脚手架"}},[t._v("#")]),t._v(" "),a("H2Icon"),t._v(" Lin 脚手架")],1),t._v(" "),a("p",[t._v("Lin UI Cli 是一款针对于 "),a("strong",[t._v("微信小程序")]),t._v(" 以及 "),a("strong",[t._v("Lin UI")]),t._v(" 的脚手架，通过 Lin UI Cli 可以快速搭建一套带有 "),a("strong",[t._v("按需加载")]),t._v(" 功能和 "),a("strong",[t._v("Lin UI")]),t._v(" 组件库的项目模板。")]),t._v(" "),a("h2",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" 特性")]),t._v(" "),a("ul",[a("li",[t._v("提供 "),a("code",[t._v("create")]),t._v(" 命令，您可以通过此命令快速搭建一套项目模板")]),t._v(" "),a("li",[t._v("提供 "),a("code",[t._v("build")]),t._v(" 命令，此命令可以实现 Lin UI  "),a("strong",[t._v("按需加载")]),t._v(" 功能")]),t._v(" "),a("li",[t._v("支持自动安装以及手动安装")])]),t._v(" "),a("h2",{attrs:{id:"快速上手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[t._v("#")]),t._v(" 快速上手")]),t._v(" "),a("h3",{attrs:{id:"新项目引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新项目引入"}},[t._v("#")]),t._v(" 新项目引入")]),t._v(" "),a("p",[t._v("执行以下命令可以快速创建一个基于 Lin UI Cli 的项目：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推荐")]),t._v("\nnpx lin-ui-cli create lin-ui-demo\n")])])]),a("p",[t._v("or")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" lin-ui-cli -g\nlin-ui-cli create lin-ui-demo\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("code",[t._v("npx")]),t._v(" 命令会在本地创建一个临时目录，等使用完之后就会删除，不会占用空间"),a("br"),t._v(" "),a("code",[t._v("npm install -g")]),t._v(" 全局安装会在本地保存一份安装的文件")])]),t._v(" "),a("p",[t._v("当项目创建完成后，会返回如下提示语句：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Successfully created project lin-ui-demo, directory name is lin-ui-demo\nNext: Please run cd lin-ui-demo && npm install or yarn\n")])])]),a("h4",{attrs:{id:"新项目引入-tip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#新项目引入-tip"}},[t._v("#")]),t._v(" 新项目引入 Tip")]),t._v(" "),a("p",[t._v("创建命令时会有如下选项：")]),t._v(" "),a("ol",[a("li",[a("p",[a("code",[t._v("name")]),t._v(" ：项目名称（ "),a("code",[t._v("package.json")]),t._v(" 文件内 "),a("code",[t._v("name")]),t._v(" 字段 ），默认为 "),a("code",[t._v("create")]),t._v(" 命令后的 "),a("code",[t._v("name")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("version")]),t._v(" ：项目版本号，默认为 "),a("code",[t._v("1.0.0")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("description")]),t._v(" ：项目介绍，默认为空")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("是否开启按需加载")]),t._v(" ：当输入 "),a("code",[t._v("yes")]),t._v(" 后，生成的文件"),a("a",{attrs:{href:"https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("project.config.json")]),t._v(" （微信开发者工具配置文件）"),a("OutboundLink")],1),t._v(" 内会携带以下代码：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"beforeUpload"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("此代码的主要是利用微信小程序自定义指令功能实现 "),a("strong",[t._v("自动按需加载")])])])]),t._v(" "),a("p",[t._v("当进行完这四步操作后，即可等待项目创建完成。")]),t._v(" "),a("p",[t._v("使用 "),a("code",[t._v("create")]),t._v(" 命令创建的项目默认携带 "),a("code",[t._v("linui.config.json")]),t._v(" 文件，此文件为脚手架配置文件，此配置文件有以下配置：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("miniprogram_npm")]),t._v(" ：配置 "),a("code",[t._v("miniprogram_npm")]),t._v(" 的文件夹名称，默认值  "),a("code",[t._v("miniprogram_npm")])]),t._v(" "),a("li",[a("code",[t._v("lin-ui-dir")]),t._v(" ： 配置 "),a("code",[t._v("miniprogram_npm")]),t._v(" 下 Lin UI 组件库文件夹的名称，默认值 "),a("code",[t._v("lin-ui")])])]),t._v(" "),a("p",[t._v("绝大部份情况下，此配置文件的配置内容无需任何更改，除非您修改了微信小程序 "),a("code",[t._v("npm")]),t._v(" 构建的默认文件夹名称，当然如果您认为不需要此文件，您也可以删除，我们在脚手架内部已内置与微信小程序相同的默认配置。")]),t._v(" "),a("p",[t._v("在生成的微信开发者工具配置文件 "),a("code",[t._v("project.config.json")]),t._v(" 文件中，我们已默认配置如下代码，用来防止微信小程序打包配置文件 "),a("code",[t._v("lin-ui.config.json")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"packOptions"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"ignore"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"file"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"value"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"linui.config.json"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"旧项目升级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#旧项目升级"}},[t._v("#")]),t._v(" 旧项目升级")]),t._v(" "),a("p",[t._v("首先，您在进行此操作前需要创建一个微信小程序项目，并在 "),a("strong",[t._v("本地设置")]),t._v(" 中勾选 "),a("code",[t._v("使用npm模块")]),t._v(" 选项。")]),t._v(" "),a("p",[t._v("打开小程序的项目根目录，执行下面的命令（如果使用了云开发，需要进入miniprogram文件夹下执行下面的命令）。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" init\n")])])]),a("p",[t._v("此时，会生成一个package.json文件，命令行里会以交互的形式让你填一些项目的介绍信息，你可以耐心填完，当然也可以忽略，全部按回车键来快速完成项目初始化。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注意事项")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("1.执行npm init进行初始化，此时会生成一个package.json文件，如果不进行npm init，在构建npm的时候会报一个错误："),a("code",[t._v("没有找到 node_modules 目录")])])]),t._v(" "),a("li",[a("p",[t._v("2.不建议使用cnpm，这样会带来一些未知的错误。如果网络情况不佳，可以使用下面的命令行更换为淘宝源。")])])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" registry https://registry.npm.taobao.org \n")])])])]),t._v(" "),a("p",[t._v("接着，继续执行下面的命令。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" lin-mini-cli\n")])])]),a("p",[t._v("or")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" lin-mini-cli\n")])])]),a("br"),t._v(" "),a("p",[t._v("接下来，在 "),a("code",[t._v("package.json")]),t._v(" 文件里写入以下代码：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lin-mini-cli build"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])]),a("p",[t._v("在微信开发者工具配置文件 "),a("code",[t._v("project.config.json")]),t._v(" 文件里写入以下代码：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"beforeUpload"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run build"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("创建 "),a("code",[t._v("lin-ui.config.json")]),t._v(" "),a("a",{attrs:{href:"#linui-config-json-attributes%EF%BC%89"}},[t._v("配置文件")]),t._v("，在文件里写入：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"miniprogramNpmDir"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"miniprogram_npm"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"linUiDir"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lin-ui"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("到此 Lin UI Cli 脚手架已经安装完成。")]),t._v(" "),a("h2",{attrs:{id:"脚手架原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#脚手架原理"}},[t._v("#")]),t._v(" 脚手架原理")]),t._v(" "),a("p",[t._v("Lin UI Cli 是通过微信开发者工具配置文件 "),a("code",[t._v("project.config.json")]),t._v(" 中 "),a("code",[t._v("packOptions.ignore")]),t._v(" 与 "),a("code",[t._v("script")]),t._v(" 字段中的 "),a("strong",[t._v("钩子")]),t._v(" 的特点来实现 "),a("strong",[t._v("按需加载")]),t._v(" ，脚手架会获取用户使用的 "),a("code",[t._v("pages")]),t._v(" 中与所有 "),a("strong",[t._v("自定义组件")]),t._v(" 中的 Lin UI 组件，然后进行 "),a("strong",[t._v("按需加载")]),t._v(" 。")]),t._v(" "),a("p",[t._v("步骤：")]),t._v(" "),a("ol",[a("li",[t._v("首先，Cli 会扫描用户所有的文件（会忽略掉 node_modules 与 miniprogram_npm 文件夹）")]),t._v(" "),a("li",[t._v("然后通过 "),a("strong",[t._v("app.json")]),t._v(" 文件中 "),a("code",[t._v("pages")]),t._v(" 字段匹配到用户所有使用到的页面")]),t._v(" "),a("li",[t._v("通过 "),a("strong",[t._v("所有文件")]),t._v(" 与 "),a("strong",[t._v("app.json")]),t._v(" 中引入的文件进行交集计算，拿到用户 "),a("strong",[t._v("所注册的与所存在")]),t._v(" 的所有页面路径")]),t._v(" "),a("li",[t._v("再进行用户自定义组件的获取操作，通过 "),a("code",[t._v("[component].json")]),t._v(" 文件中的 "),a("code",[t._v("component")]),t._v(" 字段可以确定是否为自定义组件")]),t._v(" "),a("li",[t._v("拿到所有引用组件后，对组件进行深度遍历，拿到所使用到的组件的所有依赖的组件，至此，拿到全部使用到的组件")]),t._v(" "),a("li",[t._v("通过与 miniprogram_npm 下的 Lin UI 组件进行差集对比，拿到所有未使用到的组件，写入 "),a("code",[t._v("project.config.json")]),t._v(" （ "),a("code",[t._v(".gitignore")]),t._v(" 也会被忽略）")]),t._v(" "),a("li",[a("strong",[t._v("按需加载")]),t._v(" 结束")])]),t._v(" "),a("h2",{attrs:{id:"linui-config-json-attributes）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linui-config-json-attributes）"}},[t._v("#")]),t._v(" linui.config.json (Attributes）")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("参数")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("类型")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("可选值")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("默认值")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("miniprogramNpmDir")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("配置 "),a("code",[t._v("miniprogramNpmDir")]),t._v(" （小程序执行构建npm后）的文件夹名称")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("miniprogram_npm")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("linUiDir")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("配置 "),a("code",[t._v("miniprogramNpmDir")]),t._v(" 下 Lin UI 组件所在文件夹名称")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("String")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("-")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("lin-ui")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);